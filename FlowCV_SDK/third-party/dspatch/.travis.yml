language: cpp

matrix:
  include:
  - os: linux
    env: PLATFORM="linux-gcc" CMakeArgs=""
    compiler: gcc
  - os: linux
    env: PLATFORM="linux-clang" CMakeArgs=""
    compiler: clang
  - os: osx
    env: PLATFORM="osx-gcc" CMakeArgs=""
    compiler: gcc
  - os: osx
    env: PLATFORM="osx-clang" CMakeArgs=""
    compiler: clang
  - os: linux
    env: PLATFORM="win-mingw-x86" CMakeArgs="-D CMAKE_SYSTEM_NAME=Windows -D CMAKE_C_COMPILER=x86_64-w64-mingw32-gcc-posix -D CMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++-posix"
    compiler: gcc
  - os: linux
    env: PLATFORM="win-mingw-x64" CMakeArgs="-D CMAKE_SYSTEM_NAME=Windows -D CMAKE_C_COMPILER=i686-w64-mingw32-gcc-posix -D CMAKE_CXX_COMPILER=i686-w64-mingw32-g++-posix"
    compiler: gcc

install:
- if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get install doxygen; fi
- if [ $TRAVIS_OS_NAME = linux ] && [ -n "$CMakeArgs" ]; then unset CXX; unset CC; sudo apt-get install gcc-mingw-w64-i686 gcc-mingw-w64-x86-64 g++-mingw-w64-i686 g++-mingw-w64-x86-64; fi

before_script:
    - mkdir debug
    - cd debug
    - cmake $CMakeArgs -D CMAKE_BUILD_TYPE=Debug ..
    - cd ..
    - mkdir release
    - cd release
    - cmake $CMakeArgs -D CMAKE_BUILD_TYPE=Release ..
    - cd ..

script:
    - cd debug
    - make all
    - cd ..
    - cd release
    - make all
    - if [ ! -n "$CMakeArgs" ]; then make test; fi
    - cd ..

after_success:
    - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
    - mkdir push
    - cd push
    - git init
    - git remote add origin https://marcustomlinson:$GITHUB_TOKEN@github.com/cross-platform/dspatch.git
    - git checkout -b build/$BRANCH/$PLATFORM
    - git pull origin build/$BRANCH/$PLATFORM
    - rm -rf ./*
    - mkdir debug
    - mkdir release
    - cp ../CHANGES ./
    - cp ../LICENSE ./
    - cp ../README.md ./
    - cp -r ../include ./include
    - if [ $TRAVIS_OS_NAME = linux ] && [ ! -n "$CMakeArgs" ]; then cp ../debug/*.so* ./debug/; fi
    - if [ $TRAVIS_OS_NAME = linux ] && [ ! -n "$CMakeArgs" ]; then cp ../release/*.so* ./release/; fi
    - if [ $TRAVIS_OS_NAME = osx ]; then cp ../debug/*.dylib ./debug/; fi
    - if [ $TRAVIS_OS_NAME = osx ]; then cp ../release/*.dylib ./release/; fi
    - if [ $TRAVIS_OS_NAME = linux ] && [ -n "$CMakeArgs" ]; then cp ../debug/*.dll ./debug/; cp ../debug/*.a ./debug/; fi
    - if [ $TRAVIS_OS_NAME = linux ] && [ -n "$CMakeArgs" ]; then cp ../release/*.dll ./release/; cp ../release/*.a ./release/; fi
    - git add -A
    - git commit -m "$TRAVIS_COMMIT_MESSAGE"
    - git push --set-upstream origin build/$BRANCH/$PLATFORM
